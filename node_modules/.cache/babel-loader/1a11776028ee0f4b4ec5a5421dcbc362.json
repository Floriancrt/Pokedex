{"ast":null,"code":"var _jsxFileName = \"/Users/florian/Documents/ReactJs/app-pokedex/src/components/List.js\";\nimport React from \"react\";\nimport { loadOptions } from \"@babel/core\";\nimport Loader from \"./Loader\";\nimport axios from \"axios\";\n\nclass List extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      users: [],\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    var url = \"https://pokeapi.co/api/v2/pokemon?offset=50&limit=50\";\n    axios.get(url).then(response => response.data.results.map((user, n, url, p) => (n = \"\".concat(user.name), user = \"\".concat(user.url), url = user.split('/')[6], p = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/back/\".concat(url, \".png\"), {\n      name: n,\n      username: user,\n      pics: p\n    }))).then(users => {\n      this.setState({\n        users,\n        isLoading: false\n      });\n    }).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          users = _this$state.users;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Pokemon\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, users.map(user => {\n      const name = user.name,\n            index = user.index,\n            pics = user.pics;\n      return React.createElement(\"ul\", {\n        class: \"card-list\",\n        key: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        class: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        class: \"card-image\",\n        href: \"https://michellezauner.bandcamp.com/album/psychopomp-2\",\n        target: \"_blank\",\n        style: \"background-image: url({pics});\",\n        \"data-image-full\": pics,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: pics,\n        alt: \"Psychopomp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(\"a\", {\n        class: \"card-description\",\n        href: \"https://michellezauner.bandcamp.com/album/psychopomp-2\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, name)))) // <div key={name}>\n      //   <div>\n      //   <a href={pics}><img alt=\"\" src={pics} /></a>\n      //     {isLoading ? <Loader /> : <p> {index} </p> } \n      //     {isLoading ? <Loader /> : <p> {name} </p> } \n      //   </div>\n      //   <hr />\n      // </div>\n      ;\n    })));\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["/Users/florian/Documents/ReactJs/app-pokedex/src/components/List.js"],"names":["React","loadOptions","Loader","axios","List","Component","state","isLoading","users","error","componentDidMount","url","get","then","response","data","results","map","user","n","p","name","split","username","pics","setState","catch","render","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { loadOptions } from \"@babel/core\";\nimport Loader from \"./Loader\";\nimport axios from \"axios\";\n\nclass List extends React.Component {\n  state = {\n    isLoading: true,\n    users: [],\n    error: null\n  };\n\n\n  componentDidMount() {\n\n\n    \n\n\n\n    \n\n    var url = \"https://pokeapi.co/api/v2/pokemon?offset=50&limit=50\"\n  \n\n    \n\n    axios\n      .get(url)\n      .then(response =>\n        response.data.results.map((user,n,url,p) => (\n          n = `${user.name}`,\n          user = `${user.url}`,\n          url = user.split('/')[6],\n          p = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/back/${url}.png`,\n        \n          {\n            name : n,\n            username : user,\n            pics : p,\n\n          }\n          \n          \n        ))\n        )\n        \n\n        \n\n      \n      \n      .then(users => {\n        this.setState({\n          users,\n          isLoading: false,\n        });\n      })\n      .catch(error => this.setState({ error, isLoading: false }));\n\n     \n\n\n\n\n    \n  }\n\n  render() {\n    const { isLoading, users } = this.state;\n    return (\n      <React.Fragment>\n        <h2>Pokemon</h2>\n        <div>\n          {\n            users.map(user => {\n\n\n\n\n              const { name, index, pics } = user;\n\n\n\n\n              return (\n\n\n\n                 \n\n                          <ul class=\"card-list\" key={name}>\n            \n            <li class=\"card\">\n              <a class=\"card-image\" href=\"https://michellezauner.bandcamp.com/album/psychopomp-2\" target=\"_blank\" style=\"background-image: url({pics});\" data-image-full={pics}>\n                <img src={pics} alt=\"Psychopomp\" />\n              </a>\n              <a class=\"card-description\" href=\"https://michellezauner.bandcamp.com/album/psychopomp-2\" target=\"_blank\">\n                <h2>{name}</h2>\n    \n              </a>\n            </li>\n            \n  \n          </ul>\n\n\n\n\n\n\n\n                // <div key={name}>\n                //   <div>\n                //   <a href={pics}><img alt=\"\" src={pics} /></a>\n                //     {isLoading ? <Loader /> : <p> {index} </p> } \n                //     {isLoading ? <Loader /> : <p> {name} </p> } \n                //   </div>\n\n                //   <hr />\n                // </div>\n              );\n\n\n\n\n\n\n\n\n            })\n         \n          }\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}