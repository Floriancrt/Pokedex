{"ast":null,"code":"var _jsxFileName = \"/Users/florian/Documents/ReactJs/app-pokedex/src/App.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, useParams } from \"react-router-dom\"; // Params are placeholders in the URL that begin\n// with a colon, like the `:id` param defined in\n// the route in this example. A similar convention\n// is used for matching dynamic segments in other\n// popular web frameworks like Rails and Express.\n\nclass ParamsExample extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: false,\n      users: [],\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    var url = \"https://pokeapi.co/api/v2/pokemon?offset=50&limit=50\";\n    this.setState({\n      isLoading: true\n    });\n    axios.get(url).then(response => response.data.results.map((user, n, url, p) => (n = \"\".concat(user.name), user = \"\".concat(user.url), url = user.split(\"/\")[6], p = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\".concat(url, \".png\"), {\n      name: n,\n      username: user,\n      pics: p\n    }))).then(users => {\n      this.setState({\n        users,\n        isLoading: false\n      });\n    }).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Accounts\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/netflix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Netflix\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/zillow-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Zillow Group\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/yahoo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Yahoo\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/modus-create\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Modus Create\"))), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/:id\",\n      children: React.createElement(Child, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction Child() {\n  // We can use the `useParams` hook here to access\n  // the dynamic pieces of the URL.\n  let _useParams = useParams(),\n      id = _useParams.id;\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"ID: \", id));\n}","map":{"version":3,"sources":["/Users/florian/Documents/ReactJs/app-pokedex/src/App.js"],"names":["React","BrowserRouter","Router","Switch","Route","Link","useParams","ParamsExample","Component","state","isLoading","users","error","componentDidMount","url","setState","axios","get","then","response","data","results","map","user","n","p","name","split","username","pics","catch","render","Child","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams\n} from \"react-router-dom\";\n\n// Params are placeholders in the URL that begin\n// with a colon, like the `:id` param defined in\n// the route in this example. A similar convention\n// is used for matching dynamic segments in other\n// popular web frameworks like Rails and Express.\n\nclass ParamsExample extends React.Component {\n\n\n\n\n  state = {\n    isLoading: false,\n    users: [],\n    error: null\n  };\n\n  componentDidMount() {\n    var url = \"https://pokeapi.co/api/v2/pokemon?offset=50&limit=50\";\n\n    this.setState({ isLoading: true});\n\n    axios\n      .get(url)\n      .then(response =>\n        response.data.results.map(\n          (user, n, url, p) => (\n             n = `${user.name}`,\n             user = `${user.url}`,\n             url = user.split(\"/\")[6],\n             p = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${url}.png`,\n            {\n              name: n,\n              username: user,\n              pics: p\n            }\n          )\n        )\n      )\n\n      .then(users => {\n        this.setState({\n          users,\n          isLoading: false\n        });\n      })\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n\n\nrender() {\n  return (\n    <Router>\n      <div>\n        <h2>Accounts</h2>\n\n        <ul>\n          <li>\n            <Link to=\"/netflix\">Netflix</Link>\n          </li>\n          <li>\n            <Link to=\"/zillow-group\">Zillow Group</Link>\n          </li>\n          <li>\n            <Link to=\"/yahoo\">Yahoo</Link>\n          </li>\n          <li>\n            <Link to=\"/modus-create\">Modus Create</Link>\n          </li>\n        </ul>\n\n        <Switch>\n          <Route path=\"/:id\" children={<Child />} />\n        </Switch>\n      </div>\n    </Router>\n  );\n\n  }\n\n}\n\nfunction Child() {\n  // We can use the `useParams` hook here to access\n  // the dynamic pieces of the URL.\n  let { id } = useParams();\n\n  return (\n    <div>\n      <h3>ID: {id}</h3>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}