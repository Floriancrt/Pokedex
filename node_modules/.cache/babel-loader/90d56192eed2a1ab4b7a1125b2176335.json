{"ast":null,"code":"import _slicedToArray from \"/Users/florian/Documents/ReactJs/app-pokedex/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/florian/Documents/ReactJs/app-pokedex/src/components/PokemonSearch.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Switch, Route, Link, useParams } from \"react-router-dom\";\nimport { useFetch } from \"./hooks\"; // Params are placeholders in the URL that begin\n// with a colon, like the `:id` param defined in\n// the route in this example. A similar convention\n// is used for matching dynamic segments in other\n// popular web frameworks like Rails and Express.\n\nexport default function PokeSearch() {\n  const _useFetch = useFetch(\"https://pokeapi.co/api/v2/pokemon/\"),\n        _useFetch2 = _slicedToArray(_useFetch, 2),\n        users = _useFetch2[0],\n        loading = _useFetch2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Photos\"), loading ? \"Loading...\" : React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, users.map(({\n    id,\n    weight\n  }) => React.createElement(\"li\", {\n    key: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, weight)))));\n}\n\nfunction Child() {\n  // We can use the `useParams` hook here to access\n  // the dynamic pieces of the URL.\n  let _useParams = useParams(),\n      name = _useParams.name;\n\n  try {\n    const res = fetch('https://baconipsum.com/api/?type=meat-and-filler');\n    const data = res.json();\n    this.setState({\n      data,\n      isLoading: false\n    });\n  } catch (err) {\n    console.log(err);\n    throw err;\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"ID: \", name));\n}","map":{"version":3,"sources":["/Users/florian/Documents/ReactJs/app-pokedex/src/components/PokemonSearch.js"],"names":["React","axios","BrowserRouter","Router","Switch","Route","Link","useParams","useFetch","PokeSearch","users","loading","map","id","weight","Child","name","res","fetch","data","json","setState","isLoading","err","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,SALF,QAMO,kBANP;AAOA,SAASC,QAAT,QAAyB,SAAzB,C,CAEA;AACA;AACA;AACA;AACA;;AAIA,eAAe,SAASC,UAAT,GAAsB;AAAA,oBAEJD,QAAQ,CAC/B,oCAD+B,CAFJ;AAAA;AAAA,QAEtBE,KAFsB;AAAA,QAEfC,OAFe;;AAK7B,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGA,OAAO,GACN,YADM,GAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,GAAN,CAAU,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA;AAAN,GAAD,KACT;AAAI,IAAA,GAAG,EAAED,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,MAAJ,CADF,CADD,CADH,CALJ,CADF;AAiBP;;AAED,SAASC,KAAT,GAAiB;AACf;AACA;AAFe,mBAGAR,SAAS,EAHT;AAAA,MAGTS,IAHS,cAGTA,IAHS;;AAKb,MAAI;AAGA,UAAMC,GAAG,GAAGC,KAAK,CAAC,kDAAD,CAAjB;AACA,UAAMC,IAAI,GAAGF,GAAG,CAACG,IAAJ,EAAb;AACA,SAAKC,QAAL,CAAc;AAAEF,MAAAA,IAAF;AAAQG,MAAAA,SAAS,EAAE;AAAnB,KAAd;AAGH,GARD,CASA,OAAMC,GAAN,EACA;AACIC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,UAAMA,GAAN;AACH;;AAGH,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAASP,IAAT,CADF,CADF;AAKD","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams\n} from \"react-router-dom\";\nimport { useFetch } from \"./hooks\";\n\n// Params are placeholders in the URL that begin\n// with a colon, like the `:id` param defined in\n// the route in this example. A similar convention\n// is used for matching dynamic segments in other\n// popular web frameworks like Rails and Express.\n\n\n\nexport default function PokeSearch() {\n\n        const [users, loading] = useFetch(\n          \"https://pokeapi.co/api/v2/pokemon/\"\n        );\n        return (\n          <>\n            <h1>Photos</h1>\n            {loading ? (\n              \"Loading...\"\n            ) : (\n              <ul>\n                {users.map(({ id, weight }) => (\n                  <li key={id}>\n                    <p>{weight}</p>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </>\n        );\n      \n}\n\nfunction Child() {\n  // We can use the `useParams` hook here to access\n  // the dynamic pieces of the URL.\n  let { name } = useParams();\n\n    try {\n\n                \n        const res = fetch('https://baconipsum.com/api/?type=meat-and-filler');\n        const data = res.json();\n        this.setState({ data, isLoading: false });\n        \n        \n    }\n    catch(err)\n    {\n        console.log(err);\n        throw err;\n    }\n\n\n  return (\n    <div>\n      <h3>ID: {name}</h3>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}