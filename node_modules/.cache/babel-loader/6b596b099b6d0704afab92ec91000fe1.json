{"ast":null,"code":"var _jsxFileName = \"/Users/florian/Documents/ReactJs/app-pokedex/src/components/List.js\";\nimport React from \"react\";\nimport { loadOptions } from \"@babel/core\";\nimport Loader from \"./Loader\";\nimport axios from \"axios\";\n\nclass List extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      users: [],\n      error: null\n    };\n  }\n\n  // componentDidMount() {\n  async componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n\n    try {\n      const res = await fetch('https://pokeapi.co/api/v2/pokemon');\n      const data = await res.json();\n      console.log(data.results.map((user, name, pics) => name = user.url.split('/')[6] // pics = `\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/back/.png\"`\n      ));\n      this.setState({\n        data,\n        isLoading: false\n      });\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  } // var url = \"https://pokeapi.co/api/v2/pokemon\"\n  // var name = \"https://pokeapi.co/api/v2/pokemon\".split('/')[5]\n  // console.log(name)\n  // axios\n  //   .get(url)\n  //   .then(response =>\n  //     response.data.results.map((user, index = 1) => ({\n  //       name: `${user.name}`,\n  //       count: `${user.count}`,\n  //       url: `${user.url}.split('/')[5]`,\n  //       pics: `\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/back/${url}.png\"`\n  //     }))\n  //   )\n  //   .then(users => {\n  //     this.setState({\n  //       users,\n  //       isLoading: false,\n  //     });\n  //   })\n  //   .catch(error => this.setState({ error, isLoading: false }));\n  //   axios\n  //   .get(\"https://pokeapi.co/api/v2/pokemon/:id\")\n  //   .then(response => \n  //     response.data.results.map((url, index) => ({\n  //        index: i++,\n  //        url: `https://pokeapi.co/api/v2/pokemon/${index}`,\n  //     })))\n  // }\n\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          users = _this$state.users;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Pokemon\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, users.map(user => {\n      const name = user.name,\n            index = user.index,\n            url = user.url;\n      return React.createElement(\"div\", {\n        key: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), isLoading ? React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }) : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \" \", index, \" \"), isLoading ? React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }) : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \" \", url, \" \")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }));\n    })));\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["/Users/florian/Documents/ReactJs/app-pokedex/src/components/List.js"],"names":["React","loadOptions","Loader","axios","List","Component","state","isLoading","users","error","componentDidMount","setState","res","fetch","data","json","console","log","results","map","user","name","pics","url","split","err","render","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,KAAK,EAAE;AAHD,KADyB;AAAA;;AAQjC;AAGE,QAAMC,iBAAN,GAA0B;AAExB,SAAKC,QAAL,CAAc;AAAEJ,MAAAA,SAAS,EAAE;AAAb,KAAd;;AAEA,QAAI;AAGA,YAAMK,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAD,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,OAAL,CAAaC,GAAb,CAAiB,CAACC,IAAD,EAAMC,IAAN,EAAWC,IAAX,KAC3BD,IAAI,GAAGD,IAAI,CAACG,GAAL,CAASC,KAAT,CAAe,GAAf,EAAoB,CAApB,CADoB,CAE3B;AAFU,OAAZ;AAIA,WAAKb,QAAL,CAAc;AAAEG,QAAAA,IAAF;AAAQP,QAAAA,SAAS,EAAE;AAAnB,OAAd;AAGH,KAZD,CAaA,OAAMkB,GAAN,EACA;AACIT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACA,YAAMA,GAAN;AACH;AACJ,GAjCgC,CAuC/B;AAEA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAOF;;;AAEAC,EAAAA,MAAM,GAAG;AAAA,wBACsB,KAAKpB,KAD3B;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,KADZ,eACYA,KADZ;AAEP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIA,KAAK,CAACW,GAAN,CAAUC,IAAI,IAAI;AAAA,YACRC,IADQ,GACaD,IADb,CACRC,IADQ;AAAA,YACFM,KADE,GACaP,IADb,CACFO,KADE;AAAA,YACKJ,GADL,GACaH,IADb,CACKG,GADL;AAEhB,aACE;AAAK,QAAA,GAAG,EAAEF,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAEA,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEGd,SAAS,GAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAKoB,KAAL,MAF5B,EAGGpB,SAAS,GAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAKgB,GAAL,MAH5B,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADF;AAWD,KAbD,CAFJ,CAFF,CADF;AAwBD;;AA9GgC;;AAiHnC,eAAenB,IAAf","sourcesContent":["import React from \"react\";\nimport { loadOptions } from \"@babel/core\";\nimport Loader from \"./Loader\";\nimport axios from \"axios\";\n\nclass List extends React.Component {\n  state = {\n    isLoading: true,\n    users: [],\n    error: null\n  };\n\n\n  // componentDidMount() {\n\n\n    async componentDidMount() {\n\n      this.setState({ isLoading: true});\n\n      try {\n\n          \n          const res = await fetch('https://pokeapi.co/api/v2/pokemon');\n          const data = await res.json();\n          console.log(data.results.map((user,name,pics) => (\n            name = user.url.split('/')[6]\n            // pics = `\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/back/.png\"`\n          )))\n          this.setState({ data, isLoading: false });\n          \n          \n      }\n      catch(err)\n      {\n          console.log(err);\n          throw err;\n      }\n  }\n\n\n\n    \n\n    // var url = \"https://pokeapi.co/api/v2/pokemon\"\n  \n    // var name = \"https://pokeapi.co/api/v2/pokemon\".split('/')[5]\n    // console.log(name)\n\n  \n\n    \n\n    // axios\n    //   .get(url)\n    //   .then(response =>\n    //     response.data.results.map((user, index = 1) => ({\n    //       name: `${user.name}`,\n    //       count: `${user.count}`,\n    //       url: `${user.url}.split('/')[5]`,\n    //       pics: `\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/back/${url}.png\"`\n    //     }))\n        \n\n    //   )\n      \n    //   .then(users => {\n    //     this.setState({\n    //       users,\n    //       isLoading: false,\n    //     });\n    //   })\n    //   .catch(error => this.setState({ error, isLoading: false }));\n\n    //   axios\n    //   .get(\"https://pokeapi.co/api/v2/pokemon/:id\")\n    //   .then(response => \n    //     response.data.results.map((url, index) => ({\n    //        index: i++,\n    //        url: `https://pokeapi.co/api/v2/pokemon/${index}`,\n    //     })))\n\n\n\n\n\n    \n  // }\n\n  render() {\n    const { isLoading, users } = this.state;\n    return (\n      <React.Fragment>\n        <h2>Pokemon</h2>\n        <div>\n          {\n            users.map(user => {\n              const { name, index, url } = user;\n              return (\n                <div key={name}>\n                  <div>\n                    <img alt={name} />\n                    {isLoading ? <Loader /> : <p> {index} </p> } \n                    {isLoading ? <Loader /> : <p> {url} </p> } \n                  </div>\n\n                  <hr />\n                </div>\n              );\n            })\n         \n          }\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}