{"ast":null,"code":"var _jsxFileName = \"/Users/florian/Documents/ReactJs/app-pokedex/src/components/PokemonSearch.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Switch, Route, Link, useParams } from \"react-router-dom\"; // Params are placeholders in the URL that begin\n// with a colon, like the `:id` param defined in\n// the route in this example. A similar convention\n// is used for matching dynamic segments in other\n// popular web frameworks like Rails and Express.\n\nclass PokeSearch extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: false,\n      users: [],\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    var url = \"https://pokeapi.co/api/v2/pokemon?offset=50&limit=50\";\n    this.setState({\n      isLoading: true\n    });\n    axios.get(url).then(response => response.data.results.map((user, n, url, p) => (n = \"\".concat(user.name), user = \"\".concat(user.url), url = user.split(\"/\")[6], p = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\".concat(url, \".png\"), {\n      name: n,\n      username: user,\n      pics: p\n    }))).then(users => {\n      this.setState({\n        users,\n        isLoading: false\n      });\n    }).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          users = _this$state.users;\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Accounts\"), users.map(user => {\n      const name = user.name,\n            pics = user.pics;\n      return React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/:{name}\",\n        component: Child,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }));\n    })));\n  }\n\n}\n\nconst Child = ({\n  match\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79\n  },\n  __self: this\n}, React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80\n  },\n  __self: this\n}, \"ID: \", match.params.id));\n\nexport default PokeSearch;","map":{"version":3,"sources":["/Users/florian/Documents/ReactJs/app-pokedex/src/components/PokemonSearch.js"],"names":["React","axios","BrowserRouter","Router","Switch","Route","Link","useParams","PokeSearch","Component","state","isLoading","users","error","componentDidMount","url","setState","get","then","response","data","results","map","user","n","p","name","split","username","pics","catch","render","Child","match","params","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,SALF,QAMO,kBANP,C,CAQA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAN,SAAyBR,KAAK,CAACS,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AACNC,MAAAA,SAAS,EAAE,KADL;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,KAAK,EAAE;AAHD,KAD+B;AAAA;;AAOvCC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,GAAG,GAAG,sDAAV;AAEA,SAAKC,QAAL,CAAc;AAAEL,MAAAA,SAAS,EAAE;AAAb,KAAd;AAEAV,IAAAA,KAAK,CACFgB,GADH,CACOF,GADP,EAEGG,IAFH,CAEQC,QAAQ,IACZA,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsBC,GAAtB,CACE,CAACC,IAAD,EAAOC,CAAP,EAAUT,GAAV,EAAeU,CAAf,MACGD,CAAC,aAAMD,IAAI,CAACG,IAAX,CAAF,EACCH,IAAI,aAAMA,IAAI,CAACR,GAAX,CADL,EAECA,GAAG,GAAGQ,IAAI,CAACI,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAFP,EAGCF,CAAC,sFAA+EV,GAA/E,SAHF,EAIA;AACEW,MAAAA,IAAI,EAAEF,CADR;AAEEI,MAAAA,QAAQ,EAAEL,IAFZ;AAGEM,MAAAA,IAAI,EAAEJ;AAHR,KALF,CADF,CAHJ,EAkBGP,IAlBH,CAkBQN,KAAK,IAAI;AACb,WAAKI,QAAL,CAAc;AACZJ,QAAAA,KADY;AAEZD,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID,KAvBH,EAwBGmB,KAxBH,CAwBSjB,KAAK,IAAI,KAAKG,QAAL,CAAc;AAAEH,MAAAA,KAAF;AAASF,MAAAA,SAAS,EAAE;AAApB,KAAd,CAxBlB;AAyBD;;AAEDoB,EAAAA,MAAM,GAAG;AAAA,wBACsB,KAAKrB,KAD3B;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,KADZ,eACYA,KADZ;AAEP,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGA,KAAK,CAACU,GAAN,CAAUC,IAAI,IAAI;AAAA,YACTG,IADS,GACMH,IADN,CACTG,IADS;AAAA,YACHG,IADG,GACMN,IADN,CACHM,IADG;AAGjB,aACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,SAAS,EAAEG,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD,KARA,CAFH,CADF,CADF;AAgBD;;AAzDsC;;AA4DzC,MAAMA,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAEV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASA,KAAK,CAACC,MAAN,CAAaC,EAAtB,CADF,CAFJ;;AAOA,eAAe3B,UAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams\n} from \"react-router-dom\";\n\n// Params are placeholders in the URL that begin\n// with a colon, like the `:id` param defined in\n// the route in this example. A similar convention\n// is used for matching dynamic segments in other\n// popular web frameworks like Rails and Express.\n\nclass PokeSearch extends React.Component {\n  state = {\n    isLoading: false,\n    users: [],\n    error: null\n  };\n\n  componentDidMount() {\n    var url = \"https://pokeapi.co/api/v2/pokemon?offset=50&limit=50\";\n\n    this.setState({ isLoading: true });\n\n    axios\n      .get(url)\n      .then(response =>\n        response.data.results.map(\n          (user, n, url, p) => (\n            (n = `${user.name}`),\n            (user = `${user.url}`),\n            (url = user.split(\"/\")[6]),\n            (p = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${url}.png`),\n            {\n              name: n,\n              username: user,\n              pics: p\n            }\n          )\n        )\n      )\n\n      .then(users => {\n        this.setState({\n          users,\n          isLoading: false\n        });\n      })\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n\n  render() {\n    const { isLoading, users } = this.state;\n    return (\n      <Router>\n        <div>\n          <h2>Accounts</h2>\n          {users.map(user => {\n            const { name, pics } = user;\n\n            return (\n              <Switch>\n                <Route path=\"/:{name}\" component={Child}/>\n              </Switch>\n            );\n          })}\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst Child = ({ match }) => (\n    \n    <div>\n      <h3>ID: {match.params.id}</h3>\n    </div>\n  )\n\nexport default PokeSearch;\n"]},"metadata":{},"sourceType":"module"}