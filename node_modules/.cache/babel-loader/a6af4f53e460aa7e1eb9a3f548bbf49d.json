{"ast":null,"code":"var _jsxFileName = \"/Users/florian/Documents/ReactJs/app-pokedex/src/components/PokemonSearch.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Switch, Route, Link, useParams } from \"react-router-dom\"; // Params are placeholders in the URL that begin\n// with a colon, like the `:id` param defined in\n// the route in this example. A similar convention\n// is used for matching dynamic segments in other\n// popular web frameworks like Rails and Express.\n\nexport default function ParamsExample() {\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Accounts\"), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/:id\",\n    children: React.createElement(Child, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }))));\n}\n\nfunction Child() {\n  var url = \"https://pokeapi.co/api/v2/pokemon?offset=50&limit=50\";\n  this.setState({\n    isLoading: true\n  });\n  axios.get(url).then(response => response.data.results.map((user, n, url, p) => (n = \"\".concat(user.name), user = \"\".concat(user.url), url = user.split(\"/\")[6], p = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\".concat(url, \".png\"), {\n    name: n,\n    username: user,\n    pics: p\n  }))).then(users => {\n    this.setState({\n      users,\n      isLoading: false\n    });\n  }).catch(error => this.setState({\n    error,\n    isLoading: false\n  }));\n\n  let _useParams = useParams(),\n      id = _useParams.id;\n\n  const _this$state = this.state,\n        isLoading = _this$state.isLoading,\n        users = _this$state.users;\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"ID: \", id)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, users.map(user => {\n    const name = user.name,\n          pics = user.pics;\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    });\n  })));\n}","map":{"version":3,"sources":["/Users/florian/Documents/ReactJs/app-pokedex/src/components/PokemonSearch.js"],"names":["React","axios","BrowserRouter","Router","Switch","Route","Link","useParams","ParamsExample","Child","url","setState","isLoading","get","then","response","data","results","map","user","n","p","name","split","username","pics","users","catch","error","id","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,SALF,QAMO,kBANP,C,CAQA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,aAAT,GAAyB;AACpC,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,CADF,CADF;AAWD;;AAED,SAASC,KAAT,GAAiB;AAIf,MAAIC,GAAG,GAAG,sDAAV;AAEA,OAAKC,QAAL,CAAc;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAAd;AAEAX,EAAAA,KAAK,CACFY,GADH,CACOH,GADP,EAEGI,IAFH,CAEQC,QAAQ,IACZA,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsBC,GAAtB,CACE,CAACC,IAAD,EAAOC,CAAP,EAAUV,GAAV,EAAeW,CAAf,MACGD,CAAC,aAAMD,IAAI,CAACG,IAAX,CAAD,EACAH,IAAI,aAAMA,IAAI,CAACT,GAAX,CADJ,EAEAA,GAAG,GAAGS,IAAI,CAACI,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAFN,EAGAF,CAAC,sFAA+EX,GAA/E,SAHD,EAID;AACEY,IAAAA,IAAI,EAAEF,CADR;AAEEI,IAAAA,QAAQ,EAAEL,IAFZ;AAGEM,IAAAA,IAAI,EAAEJ;AAHR,GALF,CADF,CAHJ,EAkBGP,IAlBH,CAkBQY,KAAK,IAAI;AACb,SAAKf,QAAL,CAAc;AACZe,MAAAA,KADY;AAEZd,MAAAA,SAAS,EAAE;AAFC,KAAd;AAID,GAvBH,EAwBGe,KAxBH,CAwBSC,KAAK,IAAI,KAAKjB,QAAL,CAAc;AAAEiB,IAAAA,KAAF;AAAShB,IAAAA,SAAS,EAAE;AAApB,GAAd,CAxBlB;;AARe,mBAyCFL,SAAS,EAzCP;AAAA,MAyCTsB,EAzCS,cAyCTA,EAzCS;;AAAA,sBA2Cc,KAAKC,KA3CnB;AAAA,QA2CPlB,SA3CO,eA2CPA,SA3CO;AAAA,QA2CIc,KA3CJ,eA2CIA,KA3CJ;AA4Cf,SACI,0CACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAASG,EAAT,CADF,CADE,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCH,KAAK,CAACR,GAAN,CAAUC,IAAI,IAAI;AAAA,UACPG,IADO,GACQH,IADR,CACPG,IADO;AAAA,UACDG,IADC,GACQN,IADR,CACDM,IADC;AAGf,WACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA;AAMH,GATA,CADD,CANA,CADJ;AAyBD","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams\n} from \"react-router-dom\";\n\n// Params are placeholders in the URL that begin\n// with a colon, like the `:id` param defined in\n// the route in this example. A similar convention\n// is used for matching dynamic segments in other\n// popular web frameworks like Rails and Express.\n\nexport default function ParamsExample() {\n    return (\n      <Router>\n        <div>\n          <h2>Accounts</h2>\n  \n          <Switch>\n            <Route path=\"/:id\" children={<Child />} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n  \n  function Child() {\n\n    \n   \n    var url = \"https://pokeapi.co/api/v2/pokemon?offset=50&limit=50\";\n\n    this.setState({ isLoading: true});\n\n    axios\n      .get(url)\n      .then(response =>\n        response.data.results.map(\n          (user, n, url, p) => (\n             n = `${user.name}`,\n             user = `${user.url}`,\n             url = user.split(\"/\")[6],\n             p = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${url}.png`,\n            {\n              name: n,\n              username: user,\n              pics: p\n            }\n          )\n        )\n      )\n\n      .then(users => {\n        this.setState({\n          users,\n          isLoading: false\n        });\n      })\n      .catch(error => this.setState({ error, isLoading: false }));\n  \n\n\n\n\n\n\n\n    let { id } = useParams();\n    \n    const { isLoading, users } = this.state;\n    return (\n        <>\n      <div>\n        <h3>ID: {id}</h3>\n      </div>\n\n     \n        <div>\n        {users.map(user => {\n            const { name, pics } = user;\n\n            return (\n            <div className=\"row\" >\n               \n            \n            </div>\n            );\n        })}\n        </div>\n\n</>\n\n\n\n    );\n  }\n"]},"metadata":{},"sourceType":"module"}