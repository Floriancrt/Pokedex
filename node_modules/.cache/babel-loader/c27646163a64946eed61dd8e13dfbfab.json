{"ast":null,"code":"var _jsxFileName = \"/Users/florian/Documents/ReactJs/app-pokedex/src/components/List.js\";\nimport React from \"react\";\nimport { loadOptions } from \"@babel/core\";\nimport Loader from \"./Loader\";\nimport axios from \"axios\";\n\nclass List extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      users: [],\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    var url = \"https://pokeapi.co/api/v2/pokemon\";\n    var name = url.split('/')[5];\n    console.log(name);\n    const response = fetch(\"https://pokeapi.co/api/v2/pokemon\");\n    fetch(\"https://pokeapi.co/api/v2/pokemon\").then(response => {\n      return response.json();\n    }).then(data => {\n      // Work with JSON data here\n      const res = data.results[0].url;\n      var id = res.split('/')[6];\n      console.log(res);\n      console.log(id);\n      data.forEach(element => {});\n    }).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          users = _this$state.users;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Pokemon\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, users.map(user => {\n      const name = user.name,\n            index = user.index,\n            url = user.url;\n      return React.createElement(\"div\", {\n        key: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), isLoading ? React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }) : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \" \", index, \" \"), isLoading ? React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }) : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \" \", url, \" \")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }));\n    })));\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["/Users/florian/Documents/ReactJs/app-pokedex/src/components/List.js"],"names":["React","loadOptions","Loader","axios","List","Component","state","isLoading","users","error","componentDidMount","url","name","split","console","log","response","fetch","then","json","data","res","results","id","forEach","element","catch","setState","render","map","user","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,KAAK,EAAE;AAHD,KADyB;AAAA;;AAQjCC,EAAAA,iBAAiB,GAAG;AAElB,QAAIC,GAAG,GAAG,mCAAV;AAEA,QAAIC,IAAI,GAAGD,GAAG,CAACE,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,UAAMI,QAAQ,GAAGC,KAAK,CAAC,mCAAD,CAAtB;AAMAA,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACCC,IADD,CACMF,QAAQ,IAAI;AACd,aAAOA,QAAQ,CAACG,IAAT,EAAP;AACD,KAHH,EAIGD,IAJH,CAIQE,IAAI,IAAI;AACZ;AACA,YAAMC,GAAG,GAAGD,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBX,GAA5B;AACA,UAAIY,EAAE,GAAGF,GAAG,CAACR,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYQ,EAAZ;AAEAH,MAAAA,IAAI,CAACI,OAAL,CAAaC,OAAO,IAAI,CAEvB,CAFD;AAKD,KAhBH,EAiBGC,KAjBH,CAiBSjB,KAAK,IAAI,KAAKkB,QAAL,CAAc;AAAElB,MAAAA,KAAF;AAASF,MAAAA,SAAS,EAAE;AAApB,KAAd,CAjBlB;AAsBD;;AAEDqB,EAAAA,MAAM,GAAG;AAAA,wBACsB,KAAKtB,KAD3B;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,KADZ,eACYA,KADZ;AAEP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIA,KAAK,CAACqB,GAAN,CAAUC,IAAI,IAAI;AAAA,YACRlB,IADQ,GACakB,IADb,CACRlB,IADQ;AAAA,YACFmB,KADE,GACaD,IADb,CACFC,KADE;AAAA,YACKpB,GADL,GACamB,IADb,CACKnB,GADL;AAEhB,aACE;AAAK,QAAA,GAAG,EAAEC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAEA,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEGL,SAAS,GAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAKwB,KAAL,MAF5B,EAGGxB,SAAS,GAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAKI,GAAL,MAH5B,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADF;AAWD,KAbD,CAFJ,CAFF,CADF;AAwBD;;AAvEgC;;AA0EnC,eAAeP,IAAf","sourcesContent":["import React from \"react\";\nimport { loadOptions } from \"@babel/core\";\nimport Loader from \"./Loader\";\nimport axios from \"axios\";\n\nclass List extends React.Component {\n  state = {\n    isLoading: true,\n    users: [],\n    error: null\n  };\n\n\n  componentDidMount() {\n\n    var url = \"https://pokeapi.co/api/v2/pokemon\"\n  \n    var name = url.split('/')[5]\n    console.log(name)\n\n    const response = fetch(\"https://pokeapi.co/api/v2/pokemon\")\n\n   \n\n  \n\n    fetch(\"https://pokeapi.co/api/v2/pokemon\")\n    .then(response => {\n        return response.json()\n      })\n      .then(data => {\n        // Work with JSON data here\n        const res = data.results[0].url\n        var id = res.split('/')[6]\n        console.log(res)\n        console.log(id)\n\n        data.forEach(element => {\n            \n        });\n\n        \n      })\n      .catch(error => this.setState({ error, isLoading: false }));\n\n\n\n    \n  }\n\n  render() {\n    const { isLoading, users } = this.state;\n    return (\n      <React.Fragment>\n        <h2>Pokemon</h2>\n        <div>\n          {\n            users.map(user => {\n              const { name, index, url } = user;\n              return (\n                <div key={name}>\n                  <div>\n                    <img alt={name} />\n                    {isLoading ? <Loader /> : <p> {index} </p> } \n                    {isLoading ? <Loader /> : <p> {url} </p> } \n                  </div>\n\n                  <hr />\n                </div>\n              );\n            })\n         \n          }\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}