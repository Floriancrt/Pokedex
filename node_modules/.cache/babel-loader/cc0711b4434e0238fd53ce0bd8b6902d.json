{"ast":null,"code":"var _jsxFileName = \"/Users/florian/Documents/ReactJs/app-pokedex/src/components/List.js\";\nimport React from \"react\";\nimport { loadOptions } from \"@babel/core\";\nimport Loader from \"./Loader\";\nimport axios from \"axios\";\n\nclass List extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      users: [],\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    var url = \"https://pokeapi.co/api/v2/pokemon\".split('/')[5];\n    console.log(url);\n    const response = fetch(\"https://pokeapi.co/api/v2/pokemon\");\n    axios.get(url).then(response => response.data.results.map((user, index = 1) => ({\n      name: \"\".concat(user.name),\n      count: \"\".concat(user.count),\n      url: \"\".concat(user.url, \".split('/')[5]\"),\n      pics: \"\\\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/back/\".concat(url, \".png\\\"\")\n    }))).then(users => {\n      this.setState({\n        users,\n        isLoading: false\n      });\n    }).catch(error => this.setState({\n      error,\n      isLoading: false\n    })); //   axios\n    //   .get(\"https://pokeapi.co/api/v2/pokemon/:id\")\n    //   .then(response => \n    //     response.data.results.map((url, index) => ({\n    //        index: i++,\n    //        url: `https://pokeapi.co/api/v2/pokemon/${index}`,\n    //     })))\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          users = _this$state.users;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Pokemon\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, users.map(user => {\n      const name = user.name,\n            index = user.index,\n            url = user.url;\n      return React.createElement(\"div\", {\n        key: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), isLoading ? React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }) : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \" \", index, \" \"), isLoading ? React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }) : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \" \", url, \" \")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }));\n    })));\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["/Users/florian/Documents/ReactJs/app-pokedex/src/components/List.js"],"names":["React","loadOptions","Loader","axios","List","Component","state","isLoading","users","error","componentDidMount","url","split","console","log","response","fetch","get","then","data","results","map","user","index","name","count","pics","setState","catch","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,KAAK,EAAE;AAHD,KADyB;AAAA;;AAQjCC,EAAAA,iBAAiB,GAAG;AAElB,QAAIC,GAAG,GAAG,oCAAoCC,KAApC,CAA0C,GAA1C,EAA+C,CAA/C,CAAV;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AAGA,UAAMI,QAAQ,GAAGC,KAAK,CAAC,mCAAD,CAAtB;AAIAb,IAAAA,KAAK,CACFc,GADH,CACON,GADP,EAEGO,IAFH,CAEQH,QAAQ,IACZA,QAAQ,CAACI,IAAT,CAAcC,OAAd,CAAsBC,GAAtB,CAA0B,CAACC,IAAD,EAAOC,KAAK,GAAG,CAAf,MAAsB;AAC9CC,MAAAA,IAAI,YAAKF,IAAI,CAACE,IAAV,CAD0C;AAE9CC,MAAAA,KAAK,YAAKH,IAAI,CAACG,KAAV,CAFyC;AAG9Cd,MAAAA,GAAG,YAAKW,IAAI,CAACX,GAAV,mBAH2C;AAI9Ce,MAAAA,IAAI,4FAAoFf,GAApF;AAJ0C,KAAtB,CAA1B,CAHJ,EAaGO,IAbH,CAaQV,KAAK,IAAI;AACb,WAAKmB,QAAL,CAAc;AACZnB,QAAAA,KADY;AAEZD,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID,KAlBH,EAmBGqB,KAnBH,CAmBSnB,KAAK,IAAI,KAAKkB,QAAL,CAAc;AAAElB,MAAAA,KAAF;AAASF,MAAAA,SAAS,EAAE;AAApB,KAAd,CAnBlB,EAXkB,CAgClB;AACA;AACA;AACA;AACA;AACA;AACA;AAOD;;AAEDsB,EAAAA,MAAM,GAAG;AAAA,wBACsB,KAAKvB,KAD3B;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,KADZ,eACYA,KADZ;AAEP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIA,KAAK,CAACa,GAAN,CAAUC,IAAI,IAAI;AAAA,YACRE,IADQ,GACaF,IADb,CACRE,IADQ;AAAA,YACFD,KADE,GACaD,IADb,CACFC,KADE;AAAA,YACKZ,GADL,GACaW,IADb,CACKX,GADL;AAEhB,aACE;AAAK,QAAA,GAAG,EAAEa,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAEA,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEGjB,SAAS,GAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAKgB,KAAL,MAF5B,EAGGhB,SAAS,GAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAKI,GAAL,MAH5B,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADF;AAWD,KAbD,CAFJ,CAFF,CADF;AAwBD;;AAjFgC;;AAoFnC,eAAeP,IAAf","sourcesContent":["import React from \"react\";\nimport { loadOptions } from \"@babel/core\";\nimport Loader from \"./Loader\";\nimport axios from \"axios\";\n\nclass List extends React.Component {\n  state = {\n    isLoading: true,\n    users: [],\n    error: null\n  };\n\n\n  componentDidMount() {\n\n    var url = \"https://pokeapi.co/api/v2/pokemon\".split('/')[5]\n  \n    console.log(url)\n    \n\n    const response = fetch(\"https://pokeapi.co/api/v2/pokemon\")\n\n    \n\n    axios\n      .get(url)\n      .then(response =>\n        response.data.results.map((user, index = 1) => ({\n          name: `${user.name}`,\n          count: `${user.count}`,\n          url: `${user.url}.split('/')[5]`,\n          pics: `\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/back/${url}.png\"`\n        }))\n        \n\n      )\n      \n      .then(users => {\n        this.setState({\n          users,\n          isLoading: false,\n        });\n      })\n      .catch(error => this.setState({ error, isLoading: false }));\n\n    //   axios\n    //   .get(\"https://pokeapi.co/api/v2/pokemon/:id\")\n    //   .then(response => \n    //     response.data.results.map((url, index) => ({\n    //        index: i++,\n    //        url: `https://pokeapi.co/api/v2/pokemon/${index}`,\n    //     })))\n\n\n\n\n\n    \n  }\n\n  render() {\n    const { isLoading, users } = this.state;\n    return (\n      <React.Fragment>\n        <h2>Pokemon</h2>\n        <div>\n          {\n            users.map(user => {\n              const { name, index, url } = user;\n              return (\n                <div key={name}>\n                  <div>\n                    <img alt={name} />\n                    {isLoading ? <Loader /> : <p> {index} </p> } \n                    {isLoading ? <Loader /> : <p> {url} </p> } \n                  </div>\n\n                  <hr />\n                </div>\n              );\n            })\n         \n          }\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}